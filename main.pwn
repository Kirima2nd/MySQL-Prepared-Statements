// generated by "sampctl package generate"

#include <a_mysql>

#include "MySQL-Stataments/Statament.inc"

new MySQL:sql;

main() {

    sql = mysql_connect("localhost", "root", "", "cnr");

    mysql_log(ALL);
    
	// Prepares the statement 
    new  Statement: stmt_insert = stmt_prepare (sql, "INSERT INTO accounts(username, password, hash, money, kills, deaths) VALUES (?,?,?,?,?,?) " );

    // Arrow values in questions (first 0, second is 1, etc ...) 
    stmt_bind_value (stmt_insert, 0 , TYPE_STRING, "patrickgtr");
    stmt_bind_value (stmt_insert, 1 , TYPE_STRING, "patrickgtrpassword");
    stmt_bind_value (stmt_insert, 2 , TYPE_STRING, "pgtrhash");
    stmt_bind_value (stmt_insert, 3 , TYPE_INT, 100);
    stmt_bind_value (stmt_insert, 4 , TYPE_INT, 200);
    stmt_bind_value (stmt_insert, 5 , TYPE_INT, 300);
 

    stmt_execute (stmt_insert);


    stmt_close (stmt_insert);

    new 
        playerUsername[MAX_PLAYER_NAME],
        playerPassword[65],
        playerSalt[11],
        playerMoney,
        playerKills,
        playerDeaths;
    
    new Statement:stmt_read = stmt_prepare(sql, "SELECT username, password, hash, money, kills, deaths FROM accounts where username = 'patrickgtr'");

    stmt_bind_result_field(stmt_read, 0, TYPE_STRING, playerUsername, sizeof(playerUsername));
    stmt_bind_result_field(stmt_read, 1, TYPE_STRING, playerPassword, sizeof(playerPassword));
    stmt_bind_result_field(stmt_read, 2, TYPE_STRING, playerSalt, sizeof(playerSalt));
    stmt_bind_result_field(stmt_read, 3, TYPE_INT, playerMoney);
    stmt_bind_result_field(stmt_read, 4, TYPE_INT, playerKills);
    stmt_bind_result_field(stmt_read, 5, TYPE_INT, playerDeaths);

    if(stmt_execute(stmt_read)) {
        if(stmt_fetch_row(stmt_read)) {
            printf("username %s", playerUsername);
            printf("password %s", playerPassword);
            printf("salt %s", playerSalt);
            printf("money %i", playerMoney);
            printf("kills %i", playerKills);
            printf("deaths %i", playerDeaths);
        }
    }
    stmt_close(stmt_read);
}
